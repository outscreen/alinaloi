20. Вызов из программы, написанной на языке С , процедур, написанных на ассемблере.

Общая схема: 1) Процедуры на asm и C объединяются совместно, используя файл-проект. В этом случае перечисляются C функции и имена объектных модулей, написанных на asm  после трансляции их с помощью TASM. 2) Компиляция из командной строки: а) выполнить трансляцию модуля на С; б) выполнить трансляцию модуля на ассемблере; в) выполнить объединение объектных модулей. ASM процедура должна удовлетворять ниже перечисленным требованиям: - гарантировать получение необходимой информации редактором связей; - обеспечить получ. значений аргументов, переданных ей при вызове, и видимость всех внешних переменных; - должно собл. соотв. моделей памяти, используемых при компиляции C-функции и при  обработке asm процедур. В этой связи ассемблерная процедура должна:  а) использовать правило именования сегментов, принятое в С; б) явно описывать все глобальные и внешние идентификаторы; в) поддерживать принятую в С посл. передачи аргументов и возврата значений в точку вызова. Все внешние переменные, на которые ссылается ассемблерная процедура. и описанные в С-функциях как внешние, должны объявляться в asm блоке явно с исп. директивы extrn имя_переменной: тип. Если имеются переменные, описанные в ассемблерном модуле, значения которых исп. в С функции. то они в asm  модуле объявляются с атрибутом public.
 
C_asm.cpp
extern void asm f1(int *i1,int *i2,unsigned long l);
void main (void)
{int i=5,j=7;
unsigned long l=0x12345678;
asm_f1(&I,&j,l);
printf(“i=%d,j=%d,l=%lx/n”,i,j,l);    }
Вызов процедуры аsm
.model small           .code
public asm_f1
asm_f1 PROC near
push bp

mov bp,sp
push si,di
mov si,[bp+4]
mov di,[bp+6]
mov bx,[bp+8]
mov ax,[bp+10]
mov cx,[si]
xchg cx,[di]
mov [si],cx
pop di si
pop bp
ret
asm_f1 endp
end